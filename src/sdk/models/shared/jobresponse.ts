/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ProjectCompact } from "./projectcompact";
import { ProjectTemplateCompact } from "./projecttemplatecompact";
import { TaskCompact } from "./taskcompact";
import { Expose, Type } from "class-transformer";

/**
 * The current status of this job. The value is one of: `not_started`, `in_progress`, `succeeded`, or `failed`.
 */
export enum JobResponseStatus {
    NotStarted = "not_started",
    InProgress = "in_progress",
    Succeeded = "succeeded",
    Failed = "failed",
}

/**
 * A *job* is an object representing a process that handles asynchronous work.
 */
export class JobResponse extends SpeakeasyBase {
    /**
     * Globally unique identifier of the resource, as a string.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "gid" })
    gid?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "new_project" })
    @Type(() => ProjectCompact)
    newProject?: ProjectCompact;

    @SpeakeasyMetadata()
    @Expose({ name: "new_project_template" })
    @Type(() => ProjectTemplateCompact)
    newProjectTemplate?: ProjectTemplateCompact;

    @SpeakeasyMetadata()
    @Expose({ name: "new_task" })
    @Type(() => TaskCompact)
    newTask?: TaskCompact;

    /**
     * The subtype of this resource. Different subtypes retain many of the same fields and behavior, but may render differently in Asana or represent resources with different semantic meaning.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "resource_subtype" })
    resourceSubtype?: string;

    /**
     * The base type of this resource.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "resource_type" })
    resourceType?: string;

    /**
     * The current status of this job. The value is one of: `not_started`, `in_progress`, `succeeded`, or `failed`.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "status" })
    status?: JobResponseStatus;
}
