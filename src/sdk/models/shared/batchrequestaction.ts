/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Type } from "class-transformer";

/**
 * For `GET` requests, this should be a map of query parameters you would have normally passed in the URL. Options and pagination are not accepted here; put them in `options` instead. For `POST`, `PATCH`, and `PUT` methods, this should be the content you would have normally put in the data field of the body.
 */
export class BatchRequestActionData extends SpeakeasyBase {}

/**
 * The HTTP method you wish to emulate for the action.
 */
export enum BatchRequestActionMethod {
    Get = "get",
    Post = "post",
    Put = "put",
    Delete = "delete",
    Patch = "patch",
    Head = "head",
}

/**
 * Pagination (`limit` and `offset`) and output options (`fields` or `expand`) for the action. “Pretty” JSON output is not an available option on individual actions; if you want pretty output, specify that option on the parent request.
 */
export class BatchRequestActionOptions extends SpeakeasyBase {
    /**
     * The fields to retrieve in the request.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "fields" })
    fields?: string[];

    /**
     * Pagination limit for the request.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "limit" })
    limit?: number;

    /**
     * Pagination offset for the request.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "offset" })
    offset?: number;
}

/**
 * An action object for use in a batch request.
 */
export class BatchRequestAction extends SpeakeasyBase {
    /**
     * For `GET` requests, this should be a map of query parameters you would have normally passed in the URL. Options and pagination are not accepted here; put them in `options` instead. For `POST`, `PATCH`, and `PUT` methods, this should be the content you would have normally put in the data field of the body.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "data" })
    @Type(() => BatchRequestActionData)
    data?: BatchRequestActionData;

    /**
     * The HTTP method you wish to emulate for the action.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "method" })
    method: BatchRequestActionMethod;

    /**
     * Pagination (`limit` and `offset`) and output options (`fields` or `expand`) for the action. “Pretty” JSON output is not an available option on individual actions; if you want pretty output, specify that option on the parent request.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "options" })
    @Type(() => BatchRequestActionOptions)
    options?: BatchRequestActionOptions;

    /**
     * The path of the desired endpoint relative to the API’s base URL. Query parameters are not accepted here; put them in `data` instead.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "relative_path" })
    relativePath: string;
}
