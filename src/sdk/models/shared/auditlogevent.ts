/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AuditLogEventActor } from "./auditlogeventactor";
import { AuditLogEventContext } from "./auditlogeventcontext";
import { AuditLogEventDetails } from "./auditlogeventdetails";
import { AuditLogEventResource } from "./auditlogeventresource";
import { Expose, Transform, Type } from "class-transformer";

/**
 * An object representing a single event within an Asana domain.
 *
 * @remarks
 *
 * Every audit log event is comprised of an `event_type`, `actor`, `resource`, and `context`. Some events will include additional metadata about the event under `details`. See our [currently supported list of events](/docs/supported-auditlogevents) for more details.
 */
export class AuditLogEvent extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "actor" })
    @Type(() => AuditLogEventActor)
    actor?: AuditLogEventActor;

    @SpeakeasyMetadata()
    @Expose({ name: "context" })
    @Type(() => AuditLogEventContext)
    context?: AuditLogEventContext;

    /**
     * The time the event was created.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "created_at" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    createdAt?: Date;

    @SpeakeasyMetadata()
    @Expose({ name: "details" })
    @Type(() => AuditLogEventDetails)
    details?: AuditLogEventDetails;

    /**
     * The category that this `event_type` belongs to.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "event_category" })
    eventCategory?: string;

    /**
     * The type of the event.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "event_type" })
    eventType?: string;

    /**
     * Globally unique identifier of the `AuditLogEvent`, as a string.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "gid" })
    gid?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "resource" })
    @Type(() => AuditLogEventResource)
    resource?: AuditLogEventResource;
}
