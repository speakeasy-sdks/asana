/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Type } from "class-transformer";

/**
 * The subtype of this resource. Different subtypes retain many of the same fields and behavior, but may render differently in Asana or represent resources with different semantic meaning.
 */
export enum GoalRelationshipResponseResourceSubtype {
    Subgoal = "subgoal",
    SupportingWork = "supporting_work",
}

/**
 * A *user* object represents an account in Asana that can be given access to various workspaces, projects, and tasks.
 */
export class GoalRelationshipResponseSupportedGoalOwner extends SpeakeasyBase {
    /**
     * Globally unique identifier of the resource, as a string.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "gid" })
    gid?: string;

    /**
     * *Read-only except when same user as requester*. The userâ€™s name.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name?: string;

    /**
     * The base type of this resource.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "resource_type" })
    resourceType?: string;
}

/**
 * A generic Asana Resource, containing a globally unique identifier.
 */
export class GoalRelationshipResponseSupportedGoal extends SpeakeasyBase {
    /**
     * Globally unique identifier of the resource, as a string.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "gid" })
    gid?: string;

    /**
     * The name of the goal.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "owner" })
    @Type(() => GoalRelationshipResponseSupportedGoalOwner)
    owner?: GoalRelationshipResponseSupportedGoalOwner;

    /**
     * The base type of this resource.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "resource_type" })
    resourceType?: string;
}

/**
 * A *project* represents a prioritized list of tasks in Asana or a board with columns of tasks represented as cards. It exists in a single workspace or organization and is accessible to a subset of users in that workspace or organization, depending on its permissions.
 */
export class GoalRelationshipResponseSupportingResource extends SpeakeasyBase {
    /**
     * Globally unique identifier of the resource, as a string.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "gid" })
    gid?: string;

    /**
     * Name of the project. This is generally a short sentence fragment that fits on a line in the UI for maximum readability. However, it can be longer.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name?: string;

    /**
     * The base type of this resource.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "resource_type" })
    resourceType?: string;
}

/**
 * A *goal relationship* is an object representing the relationship between a goal and another goal, a project, or a portfolio.
 */
export class GoalRelationshipResponse extends SpeakeasyBase {
    /**
     * The weight that the supporting resource's progress contributes to the supported goal's progress. This can only be 0 or 1.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "contribution_weight" })
    contributionWeight?: number;

    /**
     * Globally unique identifier of the resource, as a string.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "gid" })
    gid?: string;

    /**
     * The subtype of this resource. Different subtypes retain many of the same fields and behavior, but may render differently in Asana or represent resources with different semantic meaning.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "resource_subtype" })
    resourceSubtype?: GoalRelationshipResponseResourceSubtype;

    /**
     * The base type of this resource.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "resource_type" })
    resourceType?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "supported_goal" })
    @Type(() => GoalRelationshipResponseSupportedGoal)
    supportedGoal?: GoalRelationshipResponseSupportedGoal;

    @SpeakeasyMetadata()
    @Expose({ name: "supporting_resource" })
    @Type(() => GoalRelationshipResponseSupportingResource)
    supportingResource?: GoalRelationshipResponseSupportingResource;
}
